{"version":3,"sources":["lcy.jpeg","components/About/About.tsx","components/Experience/Experience.tsx","components/Projects/Projects.tsx","components/BottomNavigation/BottomNavigation.tsx","Portfolio_Image.png","Online_Exam.png","App.tsx","reportWebVitals.tsx","index.tsx"],"names":["Introduction","styled","Typography","padding","fontSize","lineHeight","fontWeight","fontFamily","Photo","Avatar","width","height","variant","alt","margin","GithubIcon","GitHubIcon","paddingBottom","marginTop","marginRight","LinkedinIcon","LinkedInIcon","About","Grid","container","direction","justifyContent","alignItems","spacing","Slide","in","mountOnEnter","unmountOnExit","item","xl","lg","md","sm","color","Link","href","src","myPhoto","Icon","TimelineDot","useStyles","makeStyles","theme","timelineContentRight","textAlign","Wrapper","paddingTop","Position","Period","Company","Experience","experience","classes","Timeline","align","window","innerWidth","map","exper","academic","TimelineItem","style","minHeight","TimelineSeparator","TimelineContent","position","period","company","TimelineConnector","className","PostWrapper","div","PostImg","img","Post","section","PostContent","a","Transition","Projects","projects","project","githubLink","title","desc","image","Divider","wrapper","Footer","footer","LabelBottomNavigation","component","Header","AppBar","background","MyContainer","Container","display","flexFlow","App","useState","Portfolio_Image","Exam_Image","darkState","setDarkState","palletType","mainPrimaryColor","green","mainSecondaryColor","backgroungPrimaryColor","backgroungSecondaryColor","yellow","indigo","outerTheme","createTheme","palette","type","primary","main","secondary","typography","join","body1","h6","h5","h4","h3","ThemeProvider","Box","bgcolor","CssBaseline","maxWidth","Switch","checked","icon","checkedIcon","onChange","BottomNavigation","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","console","log"],"mappings":"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","file":"static/js/main.9ea51d37.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/lcy.d7295ca9.jpeg\";","import React from 'react';\nimport myPhoto from '../../lcy.jpeg';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport { \n  styled\n } from \"@material-ui/core/styles\";\nimport { Typography, Grid, Avatar, Link } from '@material-ui/core';\nimport Slide from '@material-ui/core/Slide';\n\nconst Introduction = styled(Typography)({\n    padding: '5em 0 0',\n    fontSize: '2.3rem',\n    lineHeight: '1.5',\n    fontWeight: 100,\n    fontFamily: 'Poppins, sans-serif'\n})\n\nconst Photo = styled(Avatar)({\n    width: '350px',\n    height: '350px',\n    variant: 'square',\n    alt: 'Image',\n    margin: '3em 0 0'\n})\n\nconst GithubIcon = styled(GitHubIcon)({\n    fontSize: 90,\n    paddingBottom: '8px',\n    marginTop: '80px',\n    marginRight: '80px',\n})\n\nconst LinkedinIcon = styled(LinkedInIcon)({\n    fontSize: 100,\n    marginTop: '80px'\n})\n\nconst About: React.FC = () => {\n    return (\n        <Grid\n            container\n            direction='row'\n            justifyContent='center'\n            alignItems='center'\n            spacing={2}\n        >\n            <Slide direction='up' in={true} mountOnEnter unmountOnExit>\n                <Grid item xl={3} lg={4} md={4} sm={12}>\n                    <Introduction color='secondary'>\n                        I am <strong>Chengyang Li</strong>,<br/>\n                        a fouth year computer science student <br/>\n                        and a full-stack developer.\n                        <br/>\n                        <Link href=\"https://github.com/chengyangliii\">\n                            <GithubIcon color='primary'/>\n                        </Link>\n                        <Link href=\"https://www.linkedin.com/in/chengyang-allan-li\">\n                            <LinkedinIcon color='primary'/>\n                        </Link>\n                    </Introduction>\n                </Grid>\n            </Slide>\n            <Grid item xl={3} lg={4} md={4} sm={12}>\n                <Photo src={myPhoto}/>\n            </Grid>\n            \n        </Grid>\n    \n  );\n}\n\nexport default About","import React from 'react';\nimport { ExperienceInterface } from '../../App';\nimport { Typography } from \"@material-ui/core\";\nimport { \n  Timeline, \n  TimelineItem, \n  TimelineSeparator, \n  TimelineConnector, \n  TimelineContent,\n  TimelineDot\n} from '@material-ui/lab';\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\nimport {\n  makeStyles,\n  styled\n} from \"@material-ui/core/styles\";\n\nconst Icon = styled(TimelineDot)({\n})\n\nconst useStyles = makeStyles((theme) => ({\n\n  timelineContentRight: {\n    textAlign: 'left'\n  },\n  })\n)\n\nconst Wrapper = styled(Typography)({\n  textAlign: 'center',\n  paddingTop: '5em',\n  margin: '0 64px'\n})\n\nconst Position = styled(Typography)({\n})\n\nconst Period = styled(Typography)({\n})\n\nconst Company = styled(Typography)({\n  padding: '0 0 1em'\n})\n\nconst Experience: React.FC<ExperienceInterface> = ({experience}) => {\n\n  const classes = useStyles()\n\n  const renderList = (): JSX.Element[] => {\n    return experience.map(exper => {\n      return (\n        exper.academic ? \n        <TimelineItem style={{minHeight: \"100px\"}}>\n          <TimelineSeparator>\n            <Icon color=\"primary\">\n              <AccountBalanceIcon fontSize=\"large\"/>\n            </Icon>\n          </TimelineSeparator>\n          <TimelineContent>\n            <Typography variant=\"h5\" color=\"secondary\">\n              {exper.position}\n            </Typography>\n            <Typography variant=\"h6\" color=\"secondary\">\n              {exper.period}\n            </Typography>\n            <Typography >\n              {exper.company}\n            </Typography>           \n            {/* <Typography>\n              Last two years GPA 3.86 / 4.0\n            </Typography> */}\n          </TimelineContent>\n        </TimelineItem>\n        :\n        <TimelineItem style={{minHeight: \"100px\", padding: \"8px 0 8px 0\"}}>\n          <TimelineSeparator>\n            <Icon color=\"primary\">\n              <LaptopMacIcon fontSize=\"large\" />\n            </Icon>\n            <TimelineConnector />\n          </TimelineSeparator>\n          <TimelineContent className={classes.timelineContentRight}>\n            <Position variant=\"h5\" color=\"secondary\">\n              {exper.position}\n            </Position>\n            <Period variant=\"h6\" color=\"secondary\">\n              {exper.period}\n            </Period>\n            <Company>\n              {exper.company}\n            </Company>           \n          </TimelineContent>\n        </TimelineItem>\n      )\n    })\n  }\n\n  return (\n    <>\n      <Wrapper>\n        <Typography variant='h4' color='primary'>Professional Experiences</Typography>\n        <Timeline align={window.innerWidth > 960 ? \"alternate\" : \"left\"}>\n          {renderList()}\n        </Timeline>\n        \n    </Wrapper> \n    </>\n  );\n}\n\nexport default Experience","import React from 'react';\nimport { Typography } from \"@material-ui/core\";\nimport { Divider } from '@material-ui/core';\nimport styled from 'styled-components';\nimport { projectsInterface } from '../../App';\n \nconst PostWrapper = styled.div `\n  margin: 1em 0 5em 0;\n  width: 600px;\n  margin-left: calc((100% - 600px) / 2);\n  text-align: center;\n  padding-top: 4em;\n`\nconst Wrapper = styled.div `\n  padding-bottom: 3em;\n`\nconst PostImg = styled.img `\n  alt: 'Image not found';\n  width: 200px;\n  margin: 10px;\n`\nconst Post = styled.section `\n  display: flex;\n  flex-flow: row nowrap;\n  text-align: left;\n`\nconst PostContent = styled.div `\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: space-evenly;\n  padding: 20px;\n  ${'' /* box-shadow: 12px 12px 2px 1px */}\n  ${'' /* background-color: #090f0a */}\n` \nconst Link = styled.a `\n  text-decoration:none;\n`\nconst Transition = styled.div `\n  ${Link}:hover & {\n    transform: scale(1.1, 1.1);\n  }\n`\n\nconst Projects: React.FC<projectsInterface> = ({projects}) => {\n\n  const renderList = (): JSX.Element[] => {\n    return projects.map(project => {\n      return (\n        <Link href={project.githubLink}>\n          <Transition>\n            <Post>\n              <PostContent>\n                <Typography variant=\"h5\" color='primary'>\n                  {project.title}\n                </Typography>\n                <Typography color='secondary' style={{marginTop: \"6px\"}}>\n                  {project.desc}\n                </Typography>\n              </PostContent>\n              <PostImg src={project.image} />\n            </Post>\n          </Transition>\n        </Link>\n      )\n    })\n  }\n\n  return (\n    <>\n      <PostWrapper>\n        <Wrapper>\n          <Typography variant='h4' color='primary'>Projects</Typography>\n        </Wrapper>\n        {renderList()}\n      </PostWrapper>\n      <Divider/>   \n    </>\n  );\n}\n\nexport default Projects","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Grid,\n  Typography,\n  Link\n} from '@material-ui/core';\nimport styled from 'styled-components';\n\n\nconst useStyles = makeStyles({\n  wrapper: {\n    paddingTop: '5em'\n  },\n  item: {\n    margin: '2em 1em 2em 1em',\n  }\n\n});\n\nconst Footer = styled.footer `\n  display: flex;\n  flex-flow: row nowrap;\n`\n\nconst LabelBottomNavigation: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      container\n      direction='row'\n      justifyContent='center'\n      alignItems='center'\n    >\n\n      <Footer>\n        \n        <Typography variant='h6' color='secondary' className={classes.item} component={Link} href='mailto: chengyangli723@gmail.com'>\n          Email\n        </Typography>\n\n        <Typography variant='h6' color='secondary' className={classes.item} component={Link} href='https://github.com/chengyangliii'>\n          GitHub\n        </Typography>\n\n        <Typography variant='h6' color='secondary' className={classes.item} component={Link} href='https://www.linkedin.com/in/chengyang-allan-li'>\n          LinkedIn\n        </Typography>\n\n      </Footer>\n    </Grid>\n  );\n}\n\nexport default LabelBottomNavigation","export default __webpack_public_path__ + \"static/media/Portfolio_Image.70b5d33e.png\";","export default __webpack_public_path__ + \"static/media/Online_Exam.377b9cbc.png\";","import React, { useState }  from 'react';\nimport About from './components/About/About';\nimport Experience from './components/Experience/Experience';\nimport Projects from './components/Projects/Projects';\nimport BottomNavigation from './components/BottomNavigation/BottomNavigation';\nimport { \n  AppBar, \n  Container, \n  Typography,\n  Switch,\n  Box\n} from '@material-ui/core';\nimport './App.css';\nimport {\n  ThemeProvider,\n  createTheme,\n  styled\n} from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\nimport Brightness2Icon from '@material-ui/icons/Brightness2';\nimport { green, yellow, indigo } from '@material-ui/core/colors';\nimport Portfolio_Image from \"./Portfolio_Image.png\";\nimport Exam_Image from \"./Online_Exam.png\";\n\nconst Header = styled(AppBar)({\n  padding: '16px 0',\n  background: 'transparent',\n})\n\nconst MyContainer = styled(Container)({\n  display: 'flex',\n  flexFlow: 'row nowrap',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n})\n\nexport interface ExperienceInterface{\n  experience: {\n    position: string\n    period: string\n    company: string\n    academic?: boolean | undefined\n  }[]\n}\n\nexport interface projectsInterface {\n  projects: {\n    title: string\n    desc: string\n    image?: string\n    websiteLink?: string\n    githubLink?: string\n  }[]\n}\n\nconst App = () => {\n\n  const [experience, setExperience] = useState<ExperienceInterface['experience']>([\n    {\n      position: 'Full Stack Developer',\n      period: 'May 2021 - Aug 2021',\n      company: 'Elections Canada, QC, Canada'\n    },\n    {\n      position: 'Full Stack Developer',\n      period: 'Sep 2020 - Dec 2020',\n      company: 'University of Ottawa, ON, Canada'\n    },\n    {\n      position: 'Software Developer',\n      period: 'Jan 2020 - Apr 2020',\n      company: 'House of Commons, ON, Canada'\n    },\n    {\n      position: 'Computer Science',\n      period: 'Sep 2017 - Dec 2021',\n      company: 'University of Ottawa, ON, Canada',\n      academic: true\n    }\n  ])\n\n  const [projects, setProjects] = useState<projectsInterface['projects']>([\n    {\n      image: Portfolio_Image,\n      title: 'Personal Website',\n      desc: 'TypeScript for cenhancing code manageability and catching bugs early at compile time. \\n' +\n            'React for component-based, declarative UI development. \\n' +\n            'Styled-components for modular, scoped and dynamic CSS styling',\n      githubLink: 'https://github.com/chengyangliii/portfolio/tree/master'\n    },\n    {\n      image: Exam_Image,\n      title: 'Exam System Web App',\n      desc: 'Implemented a RESTful backend with Node.js, Express Built frontend with React, React Hooks Managed states with Redux, React-Redux Stored data in MongoBD Atlas Styled UI by Bootstrap, Materialize, React-Bootstrap.',\n      githubLink: 'https://github.com/chengyangliii/MERN-Web-App'\n    }\n    \n  ])  \n\n  const [darkState, setDarkState] = useState(true);\n  const palletType = darkState ? \"dark\" : \"light\";\n  const mainPrimaryColor = darkState ? green[500] : green[900]; \n  const mainSecondaryColor = darkState ? green[50] : green[600]; \n  const backgroungPrimaryColor = darkState ? '#000a03' : green[50]; \n  const backgroungSecondaryColor = darkState ? yellow[300] : indigo[300];\n\n  const outerTheme = createTheme({\n    palette: {\n      type: palletType,\n      primary: {\n        main: backgroungPrimaryColor,\n      },\n      secondary: {\n        main: backgroungSecondaryColor,\n      }\n    }\n  })\n\n  const theme = createTheme({\n    palette: {\n      type: palletType,\n      primary: {\n        main: mainPrimaryColor,\n      },\n      secondary: {\n        main: mainSecondaryColor,\n      }\n    },\n    typography: {\n      fontFamily: [\n        'Nunito',\n        'Play',\n        'Roboto',\n        'sans-serif',\n        '-apple-system',\n      ].join(','),\n  \n      body1: {\n        fontSize: '16px',\n        fontWeight: 400\n      },\n      h6: {\n        fontSize: '1.25rem',\n        fontWeight: 600\n      },\n      h5: {\n        fontSize: '1.5rem',\n        fontWeight: 700\n      },\n      h4: {\n        fontSize: '2.0rem',\n        fontWeight: 800\n        \n      },\n      h3: {\n        fontSize: '3rem',\n        fontWeight: 900\n      },\n    },\n  })\n  \n  const handleThemeChange = () => {\n    setDarkState(!darkState);\n  };\n\n\n  return (\n    <ThemeProvider theme={outerTheme}>\n      <Box bgcolor = 'primary.main'>\n        <ThemeProvider theme={ theme }>\n          <CssBaseline />\n          <Header className='headerBar'>\n                <MyContainer maxWidth='lg' className='header-container' color='secondary'>\n                    <Typography variant='h4' color='primary' >\n                        Chengyang Li\n                    </Typography>\n                    <Switch checked={darkState} icon={<Brightness7Icon/>} checkedIcon={<Brightness2Icon/>} onChange={handleThemeChange} />\n                </MyContainer>\n            </Header>\n          <About />\n          <Experience experience={ experience }/>\n          <Projects projects={ projects }/>\n          <BottomNavigation />\n        </ThemeProvider>\n      </Box>\n    </ThemeProvider>\n  );\n}\n\nexport default App","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry: ReportHandler | undefined) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}